---
import { Icon } from 'astro-icon/components';
import Image from '~/components/common/Image.astro';
import type { ImageMetadata } from 'astro';
import SectionDivider from '~/components/ui/SectionDivider.astro';
import Button from '~/components/ui/Button.astro';
import homepageData from '../../content/homepage/index.json';

interface Props {
  image?: ImageMetadata;
  features?: string[];
  class?: string;
}

const { image: propImage, features: propFeatures, class: className = '' } = Astro.props;

// Get homepage data from JSON
const mission = homepageData.mission;

// Définition de isMobile dans le frontmatter
const isMobile = Astro.request.headers.get('user-agent')?.includes('Mobile') ?? false;

// Fallback values if no Tina data is available
const defaultMission = {
  title: "Innover pour l'éducation de demain",
  description: "La mission d'Out of the Books est de connecter et d'inspirer les acteurs du changement éducatif à travers la Francophonie. Nous créons des espaces d'échange et d'apprentissage pour les enseignants, les directions, les parents et tous ceux qui souhaitent réinventer l'éducation.",
  features: [
    { text: "Créer des espaces d'échange et d'apprentissage" },
    { text: "Connecter les acteurs du changement éducatif" },
    { text: "Inspirer l'innovation dans l'éducation" }
  ],
  cta: {
    text: "En savoir plus sur notre mission",
    link: "/a-propos"
  }
};

// Use props if provided, otherwise use Tina data with fallback
const displayImage = propImage || mission?.image;
const displayFeatures = propFeatures || mission?.features?.map(f => f.text) || defaultMission.features.map(f => f.text);
const displayTitle = mission?.title || defaultMission.title;
const displayDescription = mission?.description || defaultMission.description;
const displayCta = mission?.cta || defaultMission.cta;

// Dimensions optimales pour l'image de mission
const mobileWidth = 480;  // Largeur optimale pour mobile
const desktopWidth = 800; // Largeur optimale pour desktop
const mobileHeight = 480; // Hauteur optimale pour mobile (ratio 1:1)
const desktopHeight = 1067; // Hauteur optimale pour desktop (ratio 3:4)
---
<section class={`py-10 md:py-20 px-4 md:px-8 ${className}`}>
  <div class="max-w-6xl mx-auto">
    <div class="flex flex-col items-center text-center mb-8 md:mb-16">
      <SectionDivider variant="turquoise" class="mb-3 md:mb-6">
        <Icon name="tabler:heart-handshake" class="w-4 h-4 mr-1" />
        Notre mission
      </SectionDivider>
      
      <h2 class="font-body text-3xl md:text-4xl font-bold text-[--ootb-blue] mb-3 md:mb-6 max-w-3xl">
        {displayTitle}
      </h2>
      
      <p class="text-lg text-gray-600 max-w-3xl">
        {displayDescription}
      </p>
    </div>
    
    <div class="grid grid-cols-1 md:grid-cols-3 gap-5 md:gap-8 mb-6 md:mb-10">
      {displayFeatures.map((feature: string) => (
        <div class="bg-white/80 backdrop-blur-sm rounded-2xl p-5 md:p-8 border border-[--ootb-turquoise]/10 hover:border-[--ootb-turquoise]/30 transition-all duration-300 hover:-translate-y-1 hover:shadow-lg group">
          <div class="flex flex-col h-full">
            <div class="mb-3 md:mb-6">
              <div class="inline-flex items-center justify-center w-12 h-12 md:w-14 md:h-14 rounded-xl bg-[--ootb-turquoise]/10 text-[--ootb-turquoise] mb-3 md:mb-4 group-hover:bg-[--ootb-turquoise] group-hover:text-white transition-colors duration-300">
                <Icon name="tabler:circle-check-filled" class="w-6 h-6 md:w-7 md:h-7" />
              </div>
              <h3 class="font-display text-lg md:text-xl font-bold text-[--ootb-blue]">
                {feature}
              </h3>
            </div>
          </div>
        </div>
      ))}
    </div>

    <div class="text-center md:text-left">
      <Button
        variant="outline-blue"
        href={displayCta.link}
        icon="tabler:arrow-right"
        iconPosition="right"
        class="w-full md:w-auto shadow-xl shadow-[--ootb-blue]/15 hover:shadow-2xl hover:shadow-[--ootb-blue]/20 transition-shadow duration-300 text-base md:text-lg"
      >
        {displayCta.text}
      </Button>
    </div>
  </div>
</section> 