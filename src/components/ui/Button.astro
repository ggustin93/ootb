---
import { Icon } from 'astro-icon/components';

interface Props {
  variant?: 'primary' | 'secondary' | 'outline' | 'ghost' | 'link' | 'blue' | 'outline-blue' | 'premium-primary' | 'premium-secondary' | 'card' | 'outline-podcast';
  size?: 'sm' | 'md' | 'lg';
  icon?: string;
  iconPosition?: 'left' | 'right';
  href?: string;
  class?: string;
  fullWidth?: boolean;
  disabled?: boolean;
  color?: string;
}

const {
  variant = 'primary',
  size = 'md',
  icon,
  iconPosition = 'left',
  href,
  class: className,
  fullWidth = false,
  disabled = false,
  color
} = Astro.props;

// Tailles
const sizes = {
  sm: 'px-4 py-2 text-sm',
  md: 'px-6 py-3 text-base',
  lg: 'px-8 py-4 text-lg'
};

// Variantes de base
const variants = {
  primary: 'bg-white text-[--ootb-turquoise] hover:bg-[--ootb-turquoise] hover:text-white shadow-lg hover:shadow-xl',
  secondary: 'bg-white/10 text-white hover:bg-white/20 backdrop-blur-sm border border-white/10 hover:border-white/20',
  outline: 'bg-white border-2 border-[--ootb-turquoise] text-[--ootb-turquoise] hover:bg-[--ootb-turquoise] hover:text-white',
  ghost: 'bg-transparent text-current hover:bg-current/10',
  link: 'bg-transparent text-current hover:underline p-0',
  blue: 'bg-[--ootb-blue] text-white hover:bg-[color-mix(in_srgb,var(--ootb-blue)_90%,black)] shadow-lg hover:shadow-xl',
  'outline-blue': 'bg-white border-2 border-[--ootb-blue] text-[--ootb-blue] hover:bg-[--ootb-blue] hover:text-white shadow-lg hover:shadow-xl',
  'outline-podcast': 'bg-white border-2 border-[--ootb-violet] text-[--ootb-violet] hover:bg-[--ootb-violet] hover:text-white shadow-lg hover:shadow-xl',
  'premium-primary': 'bg-[var(--ootb-yellow)] hover:bg-[color-mix(in_srgb,var(--ootb-yellow)_90%,black)] text-[#2A6B62]',
  'premium-secondary': 'bg-white/20 hover:bg-white/30 text-white font-medium',
  'card': 'w-full inline-flex items-center justify-center gap-2 px-4 py-3 rounded-full font-medium transition-all duration-300 group/button'
};

// États communs
const states = 'transition-all duration-300 focus:outline-none focus:ring-2 focus:ring-offset-2';
const focusRings = {
  primary: 'focus:ring-[--ootb-turquoise]',
  secondary: 'focus:ring-white/50',
  outline: 'focus:ring-[--ootb-turquoise]',
  ghost: 'focus:ring-current',
  link: 'focus:ring-current',
  blue: 'focus:ring-[--ootb-blue]',
  'outline-blue': 'focus:ring-[--ootb-blue]',
  'outline-podcast': 'focus:ring-[--ootb-violet]',
  'premium-primary': 'focus:ring-[--ootb-yellow]',
  'premium-secondary': 'focus:ring-white/50',
  'card': ''
};

// Styles de base
const baseStyles = 'inline-flex items-center justify-center gap-2 font-medium rounded-full';

// Styles désactivés
const disabledStyles = 'opacity-50 cursor-not-allowed pointer-events-none';

// Construction de la classe finale
const buttonClass = [
  baseStyles,
  sizes[size],
  variants[variant],
  focusRings[variant],
  states,
  fullWidth && 'w-full',
  disabled && disabledStyles,
  variant !== 'link' && variant !== 'card' && 'hover:-translate-y-0.5',
  className
].filter(Boolean).join(' ');

// Classes d'icônes
const getIconClasses = (position: 'left' | 'right') => [
  'w-5 h-5 transition-transform duration-300',
  position === 'right' ? 'group-hover:translate-x-0.5' : 'group-hover:-translate-x-0.5',
  variant === 'link' && position === 'right' && 'ml-1 -mr-1',
  variant === 'link' && position === 'left' && '-ml-1 mr-1'
].filter(Boolean).join(' ');

const Element = href ? 'a' : 'button';
---

<Element
  href={href}
  class:list={[buttonClass, 'group']}
  disabled={disabled}
  {...disabled && { 'aria-disabled': true }}
>
  {icon && iconPosition === 'left' && (
    <Icon name={icon} class={getIconClasses('left')} />
  )}
  <slot />
  {icon && iconPosition === 'right' && (
    <Icon name={icon} class={getIconClasses('right')} />
  )}
</Element>

<style>
  /* Styles spécifiques pour les liens */
  a.link {
    position: relative;
    display: inline-flex;
    align-items: center;
  }

  a.link::after {
    content: '';
    position: absolute;
    left: 0;
    bottom: -2px;
    width: 100%;
    height: 1px;
    background-color: currentColor;
    transform: scaleX(0);
    transform-origin: right;
    transition: transform 0.3s ease;
  }

  a.link:hover::after {
    transform: scaleX(1);
    transform-origin: left;
  }
</style>
