---
interface Props {
    variant?: 'primary' | 'secondary' | 'success' | 'sky' | 'orange' | 'yellow' | 'turquoise' | 'blue' | 'white';
    class?: string;
}

const { variant = 'primary', class: className } = Astro.props;

// Variantes utilisant les variables CSS personnalis√©es
const variants = {
  primary: `
    text-[--ootb-violet]
    border-[--ootb-violet]
  `,
  secondary: `
    text-[--ootb-blue]
    border-[--ootb-blue]
  `,
  turquoise: `
    text-[--ootb-turquoise]
    border-[--ootb-turquoise]
  `,
  success: `
    text-[--ootb-green]
    border-[--ootb-green]
  `,
  sky: `
    text-[--ootb-blue]
    border-[--ootb-blue]
  `,
  blue: `
    text-[--ootb-blue]
    border-[--ootb-blue]
  `,
  orange: `
    text-[--ootb-orange]
    border-[--ootb-orange]
  `,
  yellow: `
    text-yellow-500
    border-yellow-500
  `,
  white: `
    text-white
    border-white
  `
} as const;
---

<div class:list={[
  'relative inline-flex items-center',
  'group',
  className
]}>
  <span 
    class:list={[
      'relative px-6 py-2',
      'text-lg tracking-wide uppercase',
      'font-heading',
      'flex items-center gap-3',
      'border-l-2 border-b-2',
      'border-opacity-90',
      'rounded-bl-xl',
      'transition-all duration-300 ease-out',
      'hover:border-opacity-100 hover:pl-8',
      'hover:scale-[1.02] origin-bottom-left',
      variants[variant]
    ]}
  >
    <slot />
  </span>
</div>