---
import type { InferGetStaticPropsType, GetStaticPaths } from 'astro';
import { blogCategoryRobots, getStaticPathsBlogCategory, findTags } from '~/utils/blog';

import Layout from '~/layouts/PageLayout.astro';
import BlogList from '~/components/blog/List.astro';
import Pagination from '~/components/blog/Pagination.astro';
import { Icon } from 'astro-icon/components';
import { Image } from 'astro:assets';
import GradientHeroSection from '~/components/sections/GradientHeroSection.astro';
import TagSearch from '~/components/common/TagSearch.astro';
import ScrollDownArrow from '~/components/ui/ScrollDownArrow.astro';
import CategoryInfo from '~/components/blog/CategoryInfo.astro';
import Button from '~/components/ui/Button.astro';
import { CONTENT_TYPES } from '~/config/content-types';
import CategoryFilters from '~/components/blog/CategoryFilters.astro';

export const prerender = true;

export const getStaticPaths = (async ({ paginate }) => {
  const paths = await getStaticPathsBlogCategory({ paginate });
  return paths;
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths> & { 
  category: Record<string, string>;
  tag?: { slug: string; title: string; }; // Ajout du tag optionnel
};

const { page, category, tag } = Astro.props as Props;
const currentPage = page.currentPage ?? 1;

const allTags = await findTags().then(tags => {
  const uniqueTags = new Map();
  tags.forEach(tag => {
    if (!uniqueTags.has(tag.slug)) {
      uniqueTags.set(tag.slug, tag);
    }
  });
  return Array.from(uniqueTags.values());
});

// Limiter le nombre de tags affichés initialement
const MAX_VISIBLE_TAGS = 15;
const initialTags = allTags.slice(0, MAX_VISIBLE_TAGS);

// Configuration des filtres
const FILTER_TYPES = {
  all: {
    icon: 'tabler:layout-grid',
    label: 'Tous',
  },
  actualite: {
    icon: 'tabler:news',
    label: 'Actualités',
  },
  fiche: {
    icon: 'tabler:file-text',
    label: 'Fiches',
  },
  live: {
    icon: 'tabler:brand-facebook',
    label: 'Lives',
  },
  podcast: {
    icon: 'tabler:brand-spotify',
    label: 'Podcasts',
  },
  tv: {
    icon: 'tabler:device-tv',
    label: 'Emissions TV',
  },
  premium: {
    icon: 'tabler:crown',
    label: 'Premium',
  }
} as const;

const metadata = {
  title: `Category '${category.title}' ${currentPage > 1 ? ` — Page ${currentPage}` : ''}`,
  robots: {
    index: blogCategoryRobots?.index,
    follow: blogCategoryRobots?.follow,
  },
};
---

<Layout metadata={metadata}>
  <GradientHeroSection>
    <div class="relative z-10 container mx-auto px-4 pt-16 pb-8">
      <div class="max-w-6xl mx-auto">
        <div class="grid md:grid-cols-12 gap-12 items-center">
          <!-- Mascotte (1/3 de l'espace) -->
          <div class="relative hidden md:block order-1 md:col-span-5 -mt-8">
            <div class="relative w-full max-w-[500px] transform hover:-rotate-2 transition-transform duration-300">
              <Image
                src={import('~/assets/images/ootb-logo.svg')}
                alt="Out of the Books Mascotte"
                class="w-full h-full object-contain drop-shadow-xl"
                widths={[500]}
                sizes="500px"
                loading="eager"
              />
            </div>
          </div>

          <!-- Contenu textuel (2/3 de l'espace) -->
          <div class="text-center md:text-left order-2 md:col-span-7">
            <h1 class="font-heading text-4xl md:text-5xl font-bold text-white mb-6">
              {(!category.slug || category.slug === 'blog') 
                ? "Tous nos contenus"
                : `${CONTENT_TYPES[category.slug as keyof typeof CONTENT_TYPES]?.titlePrefix} ${CONTENT_TYPES[category.slug as keyof typeof CONTENT_TYPES]?.label}`
              }
            </h1>
            <p class="text-xl text-white/90 font-light mb-8 max-w-xl">
              {(!category.slug || category.slug === 'blog')
                ? CONTENT_TYPES.all.description
                : CONTENT_TYPES[category.slug as keyof typeof CONTENT_TYPES]?.heroDescription || 
                  CONTENT_TYPES[category.slug as keyof typeof CONTENT_TYPES]?.description
              }
            </p>

            <!-- Barre de recherche intelligente -->
            <TagSearch tags={initialTags} />

            <!-- Séparateur discret -->
            <div class="mb-4 text-center">
              <span class="text-white/40 text-xs">ou</span>
            </div>

            <!-- Label pour les filtres -->
            <div class="text-white/90 text-sm uppercase tracking-wider mb-3 font-medium">
              {(!category.slug || category.slug === 'blog')
                ? "Filtrer par type de contenu :"
                : "Autres types de contenus :"
              }
            </div>

            <!-- Filtres principaux -->
            <div class="flex flex-wrap gap-3 justify-center md:justify-start">
              {/* Bouton "TOUS" toujours présent */}
              <a
                href="/blog#category-content"
                class:list={[
                  'group relative inline-flex items-center gap-2',
                  'transform skew-x-[-12deg]',
                  'transition-all duration-300',
                  'px-6 py-2.5',
                  'ring-2',
                  (!category.slug || category.slug === 'blog') ? [
                    'bg-white text-gray-800 ring-gray-800',
                    'scale-105',
                    'shadow-lg'
                  ] : [
                    'bg-gray-800 text-white ring-gray-800 hover:bg-white hover:text-gray-800',
                    'hover:-translate-y-1'
                  ]
                ]}
              >
                <span class="transform skew-x-[12deg] flex items-center gap-2.5">
                  <Icon 
                    name="tabler:layout-grid" 
                    class="w-4 h-4 transition-transform duration-300 group-hover:scale-110" 
                  />
                  <span class="text-sm font-bold uppercase tracking-wide">Tous</span>
                </span>
              </a>

              {/* Autres filtres */}
              {Object.entries(FILTER_TYPES).filter(([key]) => key !== 'all').map(([key, config]) => {
                const isActive = key.toLowerCase() === category.slug?.toLowerCase();
                return (
                  <a
                    href={`/category/${key.toLowerCase()}#category-content`}
                    class:list={[
                      'group relative inline-flex items-center gap-2',
                      'transform skew-x-[-12deg]',
                      'transition-all duration-300',
                      'px-6 py-2.5',
                      'ring-2',
                      'transition-all duration-300',
                      {
                        'bg-[--content-actualite] text-white ring-[--content-actualite] hover:bg-white hover:text-[--content-actualite]': key === 'actualite' && !isActive,
                        'bg-[--content-fiche] text-white ring-[--content-fiche] hover:bg-white hover:text-[--content-fiche]': key === 'fiche' && !isActive,
                        'bg-[--content-live] text-white ring-[--content-live] hover:bg-white hover:text-[--content-live]': key === 'live' && !isActive,
                        'bg-[--content-podcast] text-white ring-[--content-podcast] hover:bg-white hover:text-[--content-podcast]': key === 'podcast' && !isActive,
                        'bg-[--content-tv] text-white ring-[--content-tv] hover:bg-white hover:text-[--content-tv]': key === 'tv' && !isActive,
                        'bg-[--content-premium] text-white ring-[--content-premium] hover:bg-white hover:text-[--content-premium]': key === 'premium' && !isActive,
                        // États actifs
                        'bg-white text-[--content-actualite] ring-[--content-actualite]': key === 'actualite' && isActive,
                        'bg-white text-[--content-fiche] ring-[--content-fiche]': key === 'fiche' && isActive,
                        'bg-white text-[--content-live] ring-[--content-live]': key === 'live' && isActive,
                        'bg-white text-[--content-podcast] ring-[--content-podcast]': key === 'podcast' && isActive,
                        'bg-white text-[--content-tv] ring-[--content-tv]': key === 'tv' && isActive,
                        'bg-white text-[--content-premium] ring-[--content-premium]': key === 'premium' && isActive,
                      },
                      isActive ? [
                        'scale-105',
                        'shadow-lg'
                      ] : [
                        'hover:-translate-y-1'
                      ]
                    ]}
                  >
                    <span class="transform skew-x-[12deg] flex items-center gap-2.5">
                      <Icon 
                        name={config.icon} 
                        class="w-4 h-4 transition-transform duration-300 group-hover:scale-110" 
                      />
                      <span class="text-sm font-bold uppercase tracking-wide">{config.label}</span>
                    </span>
                  </a>
                );
              })}
            </div>
          </div>
        </div>
      </div>
    </div>
  </GradientHeroSection>

  <ScrollDownArrow 
    targetId="category-content" 
    label={category.slug 
      ? CONTENT_TYPES[category.slug as keyof typeof CONTENT_TYPES]?.actionLabel 
      : "Voir tous les contenus"
    }
    position="left-[20%] bottom-[20%]"
    class="text-white hidden md:flex"
    hideOnMobile={false}
  />
  <!-- Section contenu -->
  <section id="category-content" class="py-4 -mt-8 bg-white relative z-10">
    <div class="container mx-auto px-4">
      <div class="max-w-6xl mx-auto">
        {category.slug === 'premium' ? (
          <section id="category-content" class="py-4 -mt-8 bg-white relative z-10">
            <div class="container mx-auto px-4">
              <div class="max-w-6xl mx-auto">
                {/* En-tête avec titre et filtres */}
                <div class="flex flex-col sm:flex-row sm:items-center gap-4 sm:gap-6 sm:justify-between mb-8">
                  <h2 class="text-2xl sm:text-3xl font-body font-semibold flex items-center gap-3">
                    <Icon name="tabler:crown" class="w-8 h-8 text-[--ootb-yellow]" />
                    Contenu premium
                  </h2>

                  {/* Filtres minimalistes */}
                  <div class="flex gap-1 bg-gray-100/80 p-1 rounded-lg">
                    <a
                      href="/blog#category-content"
                      class="flex items-center gap-2 px-3 py-1.5 rounded text-sm text-gray-600 hover:text-gray-900"
                    >
                      <Icon name={FILTER_TYPES.all.icon} class="w-4 h-4" />
                      <span class="text-xs sm:text-sm">{FILTER_TYPES.all.label}</span>
                    </a>

                    {Object.entries(FILTER_TYPES).filter(([key]) => key !== 'all').map(([key, config]) => (
                      <a
                        href={`/category/${key.toLowerCase()}#category-content`}
                        class:list={[
                          'flex items-center gap-2 px-3 py-1.5 rounded text-sm',
                          'transition-all duration-300',
                          key === 'premium' ? [
                            'bg-white shadow-sm',
                            'text-[--ootb-yellow]'
                          ] : [
                            'text-gray-600 hover:text-gray-900'
                          ]
                        ]}
                      >
                        <Icon name={config.icon} class="w-4 h-4" />
                        <span class="text-xs sm:text-sm">{config.label}</span>
                      </a>
                    ))}
                  </div>
                </div>

                {/* Encart explicatif */}
                <div class="bg-gradient-to-br from-amber-50 to-transparent p-8 rounded-2xl mb-12">
                  <div class="max-w-3xl mx-auto">
                    <p class="text-gray-700 text-lg mb-6">
                      Les contenus premium seront bientôt disponibles. Restez à l'écoute pour découvrir nos contenus exclusifs et enrichissants.
                    </p>
                    
                    <div class="flex flex-col sm:flex-row items-center gap-8 justify-between">
                      <div class="space-y-4 flex-1">
                        <p class="text-gray-700">
                          En devenant contributeur premium sur <Button 
                            href="https://buymeacoffee.com/outofthebooks" 
                            variant="link" 
                            size="sm"
                            icon="tabler:coffee"
                            class="text-[--ootb-yellow] hover:text-amber-500 font-semibold"
                          >Buy Me a Coffee</Button>, vous recevrez automatiquement accès à notre newsletter exclusive.
                        </p>
                        <p class="text-gray-600">
                          Celle-ci vous donnera accès à du contenu hors-série et en avant-première !
                          <span class="text-amber-600 font-medium">Plus d'informations à venir.</span>
                        </p>
                        
                        <div class="flex flex-wrap gap-4 mt-6">
                          <Button 
                            href="https://buymeacoffee.com/outofthebooks" 
                            variant="premium-primary"
                            icon="tabler:coffee"
                          >
                            Faire un don
                          </Button>
                          <Button 
                            href="/blog#category-content" 
                            variant="premium-secondary"
                            icon="tabler:arrow-left"
                          >
                            Retour aux contenus
                          </Button>
                        </div>
                      </div>

                      {/* QR Code */}
                      <div class="transform hover:scale-105 transition-all duration-300">
                        <div class="bg-white p-4 rounded-xl shadow-md hover:shadow-lg transition-shadow duration-300">
                          <Image
                            src={import('~/assets/images/bmc_qr.png')}
                            alt="QR Code Buy Me a Coffee"
                            width={160}
                            height={160}
                            class="w-full h-auto"
                          />
                          <p class="text-xs text-gray-500 mt-2 text-center">Scanner pour contribuer</p>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </section>
        ) : (
          <>
            {/* En-tête avec titre et filtres */}
            <div class="flex flex-col sm:flex-row sm:items-center gap-4 sm:gap-6 sm:justify-between mb-8">
              <h2 class="hidden sm:block text-2xl sm:text-3xl font-body font-semibold flex items-center gap-3">
                {(!category.slug || category.slug === 'blog') 
                  ? "Tous les contenus" 
                  : CONTENT_TYPES[category.slug as keyof typeof CONTENT_TYPES]?.label
                }
                {tag && (
                  <span class="inline-flex items-center gap-3 ml-3">
                    <span class="text-gray-400">•</span>
                    <span class="inline-flex items-center gap-2 bg-gray-100 px-3 py-1.5 rounded-full border border-gray-200">
                      <Icon name="tabler:tag" class="w-4 h-4 text-gray-500" />
                      <span class="text-sm text-gray-800 font-medium">{tag.title}</span>
                    </span>
                  </span>
                )}
              </h2>
              <CategoryFilters currentCategory={category.slug} />
            </div>

            {/* Encart explicatif conditionnel selon la catégorie */}
            {category.slug && (
              <CategoryInfo type={category.slug as keyof typeof CONTENT_TYPES} />
            )}

            {/* Liste des articles si pas en mode premium */}
            {category.slug !== 'premium' && (
              <>
                <BlogList posts={page.data} />
                <div class="mt-12">
                  <Pagination prevUrl={page.url.prev} nextUrl={page.url.next} />
                </div>
              </>
            )}
          </>
        )}
      </div>
    </div>
  </section>
</Layout>

<style>
  /* Animations raffinées */
  details[open] > div {
    animation: slideDown 300ms cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  @keyframes slideDown {
    from {
      opacity: 0;
      transform: translateY(-8px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Transitions douces */
  a, button {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  /* Assure un défilement fluide pour toute la page */
  html {
    scroll-behavior: smooth;
  }
  
  @media (prefers-reduced-motion: reduce) {
    html {
      scroll-behavior: auto;
    }
  }

  /* Masquer la scrollbar tout en gardant la fonctionnalité */
  .scrollbar-none {
    -ms-overflow-style: none;
    scrollbar-width: none;
  }
  .scrollbar-none::-webkit-scrollbar {
    display: none;
  }
</style>

<script>
  // Amélioration de la fonction de défilement
  function scrollToFilters() {
    const element = document.getElementById('category-content');
    if (element) {
      const headerOffset = 100;
      const elementPosition = element.getBoundingClientRect().top;
      const offsetPosition = elementPosition + window.scrollY - headerOffset;

      const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;
      
      window.scrollTo({
        top: offsetPosition,
        behavior: prefersReducedMotion ? 'auto' : 'smooth'
      });
    }
  }

  // Gestionnaire pour les liens avec ancre
  function handleAnchorClick(e) {
    const href = e.currentTarget.getAttribute('href');
    if (href?.includes('#category-content')) {
      // Ne pas empêcher la navigation par défaut
      // Attendre que la navigation soit terminée avant de scroller
      setTimeout(() => {
        scrollToFilters();
      }, 100);
    }
  }

  // Initialisation
  document.addEventListener('DOMContentLoaded', () => {
    if (window.location.hash === '#category-content') {
      requestAnimationFrame(() => scrollToFilters());
    }

    // Ajout des écouteurs d'événements sur les liens
    document.querySelectorAll('a[href*="#category-content"]').forEach(link => {
      link.addEventListener('click', handleAnchorClick);
    });
  });
</script>

