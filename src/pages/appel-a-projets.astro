---
import Layout from '~/layouts/PageLayout.astro';
import { Icon } from 'astro-icon/components';
import ProjectSubmissionForm from '~/components/forms/ProjectSubmissionForm.astro';
import SectionDivider from '~/components/ui/SectionDivider.astro';
import ContentHeroSection from '~/components/sections/ContentHeroSection.astro';
import logoTalent from '~/assets/images/logo_talent.avif';

// Import des données depuis le fichier JSON géré par Tina
import appelProjetData from '~/content/appel_projet/index.json';

// Extraction des données du fichier JSON
const { metadata, hero, criteres, processus, formulaire } = appelProjetData;

// Extraction des étapes du processus pour le mapping
const processSteps = processus.steps.map(step => ({
  icon: step.title === 'Soumission' ? 'tabler:bulb' : 
        step.title === 'Évaluation' ? 'tabler:messages' : 'tabler:check',
  title: step.title,
  description: step.description
}));

// Extraction des critères pour le mapping
const criteria = criteres.items.map(item => ({
  icon: item.title === 'Innovation pédagogique' ? 'tabler:bulb-filled' :
        item.title === 'Impact mesurable' ? 'tabler:chart-dots' :
        item.title === 'Facilement reproductible' ? 'tabler:repeat' : 'tabler:users',
  title: item.title,
  description: item.description
}));

// Préparation des boutons avec les propriétés size pour ContentHeroSection
const heroButtons = hero.buttons.map(button => ({
  ...button,
  size: 'lg'
}));

---

<Layout {metadata}>
  <ContentHeroSection
    logo={logoTalent}
    logoClass="w-[350px] md:w-[500px] h-auto mx-auto md:mx-0"
    heroImage={hero.heroImage}
    quote={hero.quote}
    quoteColor="--ootb-blue"
    buttons={heroButtons}
    scroll={{
      targetId: hero.scroll.targetId,
      label: hero.scroll.label,
      position: "bottom-[25%] left-[55%]",
      hideOnMobile: true
    }}
    imageBackgroundColor="--ootb-blue"
  />

  <!-- Critères - PADDING ENCORE PLUS RÉDUIT -->
  <section id="criteres" class="pt-16 pb-24 md:pb-32 relative bg-white scroll-mt-16">
    <!-- Image de fond avec overlay -->
    <div class="absolute inset-0">
      <img
        src={criteres.backgroundImage}
        alt="Collaboration éducative"
        class="w-full h-full object-cover opacity-5"
      />
      <div class="absolute inset-0 bg-white/90"></div>
    </div>

    <div class="container mx-auto px-4 relative z-10">
      <div class="max-w-5xl mx-auto">
        <div class="text-center mb-12">
          <SectionDivider variant="sky" class="mb-6">
            <Icon name="tabler:target" class="w-5 h-5" />
            Critères
          </SectionDivider>
          <h2 class="text-4xl md:text-5xl font-bold text-sky-900 mb-4">
            {criteres.title}
          </h2>
        </div>

        <div class="grid sm:grid-cols-2 gap-6">
          {criteria.map((item) => (
            <div class="group bg-white/90 backdrop-blur-sm rounded-2xl p-6 border border-white/60 hover:shadow-xl hover:-translate-y-1 transition-all duration-300">
              <div class="flex items-start gap-4">
                <div class="inline-flex items-center justify-center w-12 h-12 bg-[#6ab29e]/10 text-[--ootb-blue] rounded-xl transform group-hover:scale-110 group-hover:rotate-3 transition-all duration-300">
                  <Icon name={item.icon} class="w-6 h-6" />
                </div>
                <div>
                  <h3 class="text-xl md:text-2xl font-semibold text-sky-900 mb-2">
                    {item.title}
                  </h3>
                  <p class="text-sm text-gray-600">
                    {item.description}
                  </p>
                </div>
              </div>
            </div>
          ))}
        </div>

        <!-- Vidéo ou image inspirante -->
        <div class="mt-16 p-6 relative rounded-2xl overflow-hidden shadow-2xl group">
          <div class="aspect-video relative">
            <img
              src={criteres.inspirationImage}
              alt="Enseignants collaborant sur un projet innovant"
              class="w-full h-full object-cover transition-transform duration-700 group-hover:scale-105"
            />            
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Processus - MAINTENANT AVEC FOND TRÈS LÉGÈREMENT BLEU -->
  <section id="processus" class="py-24 md:py-32 bg-white relative scroll-mt-16">
    <div class="container mx-auto px-4">
      <div class="max-w-4xl mx-auto">
        <div class="text-center mb-16">
          <SectionDivider variant="sky" class="mb-6">
            <Icon name="tabler:list-check" class="w-5 h-5" />
            Processus
          </SectionDivider>
          <h2 class="text-4xl md:text-5xl font-bold text-sky-900 mb-6">
            {processus.title}
          </h2>
          <p class="text-lg text-gray-600 max-w-2xl mx-auto">
            {processus.description}
          </p>
        </div>

        <div class="grid md:grid-cols-2 gap-8 items-center">
          <!-- Cartes à gauche -->
          <div class="space-y-6 h-full">
            {processSteps.map((step) => (
              <div class="bg-[var(--ootb-blue)] rounded-xl p-6 shadow-sm hover:shadow-md transition-shadow">
                <div class="flex items-start gap-5">
                  <div class="bg-white/10 rounded-lg p-3 shrink-0">
                    <Icon name={step.icon} class="w-6 h-6 text-white" />
                  </div>
                  <div class="min-w-0">
                    <h3 class="text-xl md:text-2xl font-semibold mb-2 text-white">
                      {step.title}
                    </h3>
                    <p class="text-white/90 leading-relaxed">{step.description}</p>
                  </div>
                </div>
              </div>
            ))}
          </div>
          
          <!-- Image à droite -->
          <div class="relative order-first md:order-last h-full">
            <div class="h-full">
              <div class="aspect-[9/16] w-full">
                <video
                  class="rounded-2xl shadow-xl w-full h-full object-cover"
                  controls
                  preload="metadata"
                >
                  <source 
                    src={processus.videoUrl}
                    type="video/mp4"
                  />
                  Votre navigateur ne supporte pas la lecture de vidéos.
                </video>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Formulaire - RESTE EN DERNIER -->
  <section id="formulaire" class="py-24 md:py-32 bg-gradient-to-b from-[--ootb-blue] from-0% via-[#4a90c9] via-60% to-[--ootb-blue] to-100% scroll-mt-16 mt-8">
    <div class="container mx-auto px-4">
      <div class="max-w-3xl mx-auto text-center mb-16">
        <SectionDivider variant="white" class="mb-6">
          <Icon name="tabler:send" class="w-5 h-5 text-white" />
          <span class="text-white">Soumission</span>
        </SectionDivider>
        <h2 class="text-4xl md:text-5xl font-bold text-white mb-6">
          {formulaire.title}
        </h2>
        <p class="text-xl text-white/90 pb-6">
          {formulaire.description}
        </p>
      </div>
      
      <div class="relative z-10">
        <ProjectSubmissionForm />
      </div>
    </div>
  </section>
</Layout>

<style>
  /* Animations raffinées */
  @keyframes float {
    0%, 100% {
      transform: translateY(0) rotate(0);
      opacity: 0.2;
    }
    50% {
      transform: translateY(-20px) rotate(5deg);
      opacity: 0.3;
    }
  }

  @keyframes float-delayed {
    0%, 100% {
      transform: translateY(0) rotate(0);
      opacity: 0.15;
    }
    50% {
      transform: translateY(-15px) rotate(-5deg);
      opacity: 0.25;
    }
  }

  .animate-float {
    animation: float 6s ease-in-out infinite;
  }

  .animate-float-delayed {
    animation: float-delayed 8s ease-in-out infinite;
    animation-delay: -2s;
  }

  .process-step {
    @apply relative overflow-hidden;
  }
  
  .process-step::before {
    content: '';
    @apply absolute inset-0 bg-gradient-to-br from-[#6ab29e]/5 to-transparent opacity-0 transition-opacity duration-300 rounded-2xl;
  }
  
  .process-step:hover::before {
    @apply opacity-100;
  }

  /* Ajout d'effets de hover plus sophistiqués */
  .process-step:hover {
    transform: translateY(-5px);
    box-shadow: 0 15px 30px rgba(var(--ootb-blue-rgb), 0.1);
  }

  .criteria-card:hover {
    background: linear-gradient(135deg, white, rgba(var(--ootb-blue-rgb), 0.05));
  }
</style>