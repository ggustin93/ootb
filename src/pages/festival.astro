---
import Layout from '~/layouts/PageLayout.astro';
import { Icon } from 'astro-icon/components';
import Image from '~/components/common/Image.astro';
import FestivalHeroSection from '~/components/sections/FestivalHeroSection.astro';
import SectionDivider from '~/components/ui/SectionDivider.astro';
import DayFilter from '~/components/ui/DayFilter.astro';
import eventsData from '../content/festival/events.json';
import type { EventsByDay } from '~/types/festival';
import YouTubePlayer from '~/components/common/YouTubePlayer.astro';
import ootbLogo from '~/assets/images/ootb-logo.svg';
import Carousel from '~/components/ui/Carousel.astro';
import Button from '~/components/ui/Button.astro';
import ActivityCards from '~/components/sections/ActivityCards.astro';
// Activer le prerendering pour cette page
export const prerender = true;

// Import du contenu depuis le fichier JSON
import festivalContent from '~/content/festival/tina/index.json';

// Extraction des données du fichier JSON
const { metadata, hero, about, gallery, stats, programme, themes: themeData, accessibility, partenaires: partenaireData } = festivalContent;

// Import de l'utilitaire findImage pour résoudre les chemins d'images
import { findImage } from '~/utils/images';

// Résolution des images pour le hero section
const heroLogo = await findImage(hero.logo);
const heroBackground = await findImage(hero.heroImage);

// Utiliser directement les données statiques au lieu d'appeler getEventsByDay()
const eventsByDay = eventsData as EventsByDay;
---

<Layout metadata={metadata} currentPage="festival">
  <FestivalHeroSection
    logo={heroLogo}
    heroImage={heroBackground}
    date={hero.date}
    location={hero.location}
    description={hero.description}
  >
  </FestivalHeroSection>

  <!-- Cartes d'activités adaptées pour mobile - Utilisation unique -->
  <div id="features" class="relative z-20 mt-8 sm:mt-0 sm:-mt-40">
    <ActivityCards />
  </div>

  <!-- Section Introduction -->
  <section id="about" class="pt-8 sm:pt-20 pb-4 md:pb-16 bg-white relative">
    <div class="max-w-6xl mx-auto px-4 sm:px-6">
      <div class="text-center mb-8 md:mb-16">
        <SectionDivider variant="orange" class="mb-4 md:mb-6">
          <Icon name="tabler:bulb" class="w-5 h-5" />
          <span>En bref</span>
        </SectionDivider>
        <h2 class="text-3xl md:text-4xl lg:text-5xl font-body font-bold mb-2 md:mb-6 text-sky-900">
          {about.title}
        </h2>
        <p class="text-lg md:text-xl text-gray-600 max-w-3xl mx-auto mb-8 md:mb-12">
          {about.description}
        </p>
      </div>

      <!-- Présentation en deux colonnes -->
      <div class="grid md:grid-cols-2 gap-16 items-center mb-8 md:mb-16">
        <!-- Vidéo à gauche -->
        <div class="relative aspect-video">
          <div class="absolute -inset-4 bg-black rounded-[2rem] border-2 border-[--ootb-orange] shadow-[0_0_20px_rgba(228,69,30,0.3)]"></div>
          <div class="relative z-10 rounded-2xl overflow-hidden shadow-2xl transform-gpu hover:scale-[1.02] transition-transform duration-500">
            <YouTubePlayer
              videoId={about.videoId}
              title={about.videoTitle}
              className="w-full aspect-video"
              controls={true}
            />
            <!-- Effet de reflet -->
            <div class="absolute -bottom-6 left-1/2 -translate-x-1/2 w-[90%] h-20 bg-gradient-to-t from-white/20 to-transparent blur-lg transform-gpu"></div>
          </div>
        </div>

        <!-- Texte à droite -->
        <div class="space-y-6">
          <div class="max-w-xl">
            {about.paragraphs.map((paragraph: string) => (
              <p class="text-lg text-gray-600 mb-6">
                {paragraph}
              </p>
            ))}
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Galerie photos des éditions précédentes -->
  <section id="gallery" class="bg-white relative overflow-hidden pt-0 pb-4 md:pt-0 md:pb-8 -mt-4 md:mt-0">
    <div class="max-w-6xl mx-auto px-4 sm:px-6 py-0 md:py-8">
        <div class="text-center mb-6 md:mb-12">
          <SectionDivider variant="orange" class="mb-4 md:mb-6">
            <Icon name="tabler:camera" class="w-5 h-5" />
            <span>Rétrospective</span>
          </SectionDivider>
          <h2 class="text-3xl md:text-4xl lg:text-5xl font-body font-bold mt-0 mb-2 md:mb-6 text-sky-900">{gallery.title}</h2>
          <p class="text-lg md:text-xl text-gray-600 max-w-2xl mx-auto mb-4 md:mb-8">
            {gallery.description}
          </p>
        </div>

        <!-- Carousel de photos -->
        <div class="w-full max-w-3xl mx-auto">
          <Carousel photos={gallery.photos} />
        </div>

        <!-- Stats sur une ligne avec style amélioré -->
        <div class="relative py-12 md:py-16 bg-[--ootb-turquoise] rounded-3xl overflow-hidden shadow-xl mt-6 md:mt-16">
          <!-- Éléments décoratifs -->
          <div class="absolute inset-0 overflow-hidden">
            <div class="absolute top-0 right-0 w-64 h-64 bg-white/5 rounded-full blur-3xl transform translate-x-1/2 -translate-y-1/2"></div>
            <div class="absolute bottom-0 left-0 w-48 h-48 bg-white/5 rounded-full blur-2xl transform -translate-x-1/2 translate-y-1/2"></div>
          </div>

          <div class="relative z-10 grid grid-cols-2 md:grid-cols-4 gap-8 md:gap-12 max-w-6xl mx-auto">
            {stats.map((stat) => (
              <div class="text-center transform hover:-translate-y-1 transition-all duration-300">
                <div class="mb-4">
                  <Icon name={stat.icon} class="w-8 h-8 text-white/90 mx-auto" />
                </div>
                <div class="text-4xl md:text-5xl font-bold text-white mb-3">
                  {stat.number}
                </div>
                <div class="text-xl md:text-2xl lg:text-3xl text-white/90 font-handwritten">
                  {stat.label}
                </div>
              </div>
            ))}
          </div>
        </div>
    </div>
  </section>

  <!-- Programme du festival -->
  <section id="programme" class="pt-16 md:pt-24 pb-8 bg-[color-mix(in_srgb,var(--ootb-orange)_5%,white)] relative overflow-hidden">
    <!-- Éléments décoratifs -->
    <div class="absolute inset-0">
      <div class="absolute top-0 left-0 w-96 h-96 bg-[--ootb-orange]/5 rounded-full blur-3xl transform -translate-x-1/3 -translate-y-1/3"></div>
      <div class="absolute bottom-0 right-0 w-80 h-80 bg-[--ootb-orange]/5 rounded-full blur-2xl transform translate-x-1/4 translate-y-1/4"></div>
    </div>

    <div class="max-w-6xl mx-auto px-4 sm:px-6">
        <div class="text-center mb-8 md:mb-16 relative z-10">
          <SectionDivider variant="orange" class="mb-4 md:mb-6">
            <Icon name="tabler:calendar" class="w-5 h-5" />
            <span>Planning</span>
          </SectionDivider>
          <h2 class="text-3xl md:text-4xl lg:text-5xl font-body font-bold mb-2 md:mb-6 text-sky-900 tracking-tight">{programme.title}</h2>
          <p class="text-lg md:text-xl text-gray-600 max-w-2xl mx-auto mb-4 md:mb-8 font-light tracking-wide leading-relaxed">
            {programme.description}
          </p>
          <div class="flex justify-center">
            <Button
              href="https://indd.adobe.com/view/7bf541a0-d836-436c-b34a-68b6431b8fd0"
              variant="outline" 
              size="md"
              icon="tabler:external-link"
              iconPosition="right"
              class="mx-auto"
              target="_blank"
              rel="noopener noreferrer"
            >
              Voir le programme complet
            </Button>
          </div>
        </div>

        <div class="bg-white rounded-[32px] shadow-xl p-4 md:p-8 mb-16 relative z-10">
          <style>
            /* Style personnalisé pour les boutons du DayFilter */
            :global(.day-filter-button) {
              @apply border-2 border-gray-100 text-gray-600 px-6 py-3 rounded-xl
                hover:border-[#e4451e]/40 hover:text-[#e4451e] 
                transition-all duration-300 bg-white/80
                flex items-center gap-2 cursor-pointer;
            }
            :global(.day-filter-button.active) {
              @apply border-[#e4451e] text-[#e4451e] bg-white 
                font-medium shadow-sm ring-2 ring-[#e4451e]/10 ring-offset-2;
            }
            :global(.day-filter-button:hover) {
              @apply shadow-md bg-white transform -translate-y-[2px];
            }
            :global(.day-filter-button::before) {
              content: '';
              @apply w-2 h-2 rounded-full bg-current opacity-0 transition-opacity duration-300;
            }
            :global(.day-filter-button:hover::before) {
              @apply opacity-50;
            }
            :global(.day-filter-button.active::before) {
              @apply opacity-100;
            }

            /* Style pour la pagination */
            :global(.pagination-button) {
              @apply px-4 py-2 border border-gray-200 rounded-lg text-gray-600
                hover:border-[#e4451e]/40 hover:text-[#e4451e] 
                transition-all duration-300
                flex items-center gap-2;
            }
            :global(.pagination-button:disabled) {
              @apply opacity-50 cursor-not-allowed hover:border-gray-200 hover:text-gray-600;
            }
            :global(.pagination-info) {
              @apply text-sm text-gray-500 font-medium;
            }

            /* Réduction de la taille des images */
            :global(.event-image) {
              @apply w-24 h-24 rounded-xl object-cover;
            }

            /* Système typographique harmonisé */
            p:not(.hero-text) {
              color: #5d7186; /* Gris bleuté plus doux */
              @apply tracking-wide font-normal;
            }

            .hero-text {
              @apply text-white font-light tracking-wide;
            }

            h3 {
              @apply tracking-tight;
              color: #34495e;
              transition: color 0.3s ease;
            }
          </style>
          <DayFilter events={eventsByDay} />
        </div>
    </div>
  </section>

  <!-- Thèmes avec animation au scroll -->
  <section id="themes" class="relative py-16 bg-white overflow-hidden">
    <div class="absolute inset-0 overflow-hidden">
      <div class="absolute top-8 -right-4 w-[100px] h-[100px] md:w-[180px] md:h-[180px] z-20">
        <Image
          src={ootbLogo}
          alt=""
          class="w-full h-full object-contain transform scale-x-[-1] rotate-[-8deg] opacity-90"
          widths={[100, 180]}
          sizes="(max-width: 768px) 100px, 180px"
          aspectRatio="1:1"
          loading="lazy"
          decoding="async"
        />
      </div>
    </div>

    <div class="relative z-10 container mx-auto px-4">
      <div class="text-center mb-16">
        <SectionDivider variant="orange" class="mb-6">
          <Icon name="tabler:bulb" class="w-5 h-5" />
          Thématiques
        </SectionDivider>
        <h2 class="text-4xl md:text-5xl font-body font-bold mb-6 text-sky-900">{themeData.title}</h2>
        <p class="text-xl text-gray-600 max-w-3xl mx-auto mb-12">
          {themeData.description}
        </p>
      </div>

      <div class="grid md:grid-cols-3 gap-8">
        {themeData.liste.map((theme) => (
          <div class="relative bg-[color-mix(in_srgb,var(--ootb-orange)_2%,white)] p-8 rounded-2xl shadow-md hover:shadow-lg transition-all duration-300 group transform hover:-translate-y-1 border border-[#e4451e]/5 overflow-hidden">
            <!-- Effet de brillance sur le hover -->
            <div class="absolute inset-0 bg-gradient-to-r from-transparent via-white/10 to-transparent opacity-0 group-hover:opacity-100 transform -translate-x-full group-hover:translate-x-full transition-all duration-1000"></div>
            <div class="relative z-10">
              <div class="mb-6 transform group-hover:scale-110 transition-transform duration-300">
                <div class="w-14 h-14 bg-gradient-to-br from-[#e4451e] to-[#ff6b47] rounded-xl flex items-center justify-center relative shadow-lg">
                  <div class="absolute inset-0 bg-[#e4451e] rounded-xl opacity-20 animate-pulse"></div>
                  <Icon name={theme.icon} class="w-7 h-7 text-white relative z-10" />
                </div>
              </div>
              <h3 class="text-2xl font-bold text-gray-600 mb-4 group-hover:text-[#e4451e] transition-colors tracking-tight">{theme.title}</h3>
              <p class="text-[#4a5568] leading-relaxed font-normal tracking-wide">{theme.description}</p>
            </div>
            
            <!-- Effets décoratifs -->
            <div class="absolute inset-0 bg-gradient-to-br from-transparent via-transparent to-[#e4451e]/5 opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
            <div class="absolute -bottom-2 -right-2 w-32 h-32 bg-[#e4451e]/5 rounded-full blur-xl opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
            <div class="absolute top-0 right-0 w-24 h-24 bg-gradient-to-bl from-[#e4451e]/10 to-transparent rounded-bl-full transform scale-0 group-hover:scale-100 transition-transform duration-300"></div>
          </div>
        ))}
      </div>
    </div>
  </section>

  <!-- Section Accessibilité -->
  <section id="accessibility" class="py-16 bg-white relative">
    <div class="max-w-6xl mx-auto px-4 sm:px-6">
      <div class="text-center mb-12">
        <SectionDivider variant="orange" class="mb-6">
          <Icon name="tabler:accessible" class="w-5 h-5" />
          Accessibilité
        </SectionDivider>
        <h2 class="text-4xl md:text-5xl font-body font-bold mb-6 text-sky-900">{accessibility.title}</h2>
        <p class="text-xl text-gray-600 max-w-3xl mx-auto mb-12">
          {accessibility.description}
        </p>
      </div>

      <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
        {accessibility.sections.map((section) => (
          <div class="bg-gray-50 p-6 rounded-2xl text-center">
            <div class="mb-4 flex justify-center">
              <Icon name={section.icon} class="w-8 h-8 text-[--ootb-orange]" />
            </div>
            <h3 class="text-2xl font-bold mb-4">{section.title}</h3>
            {section.lieu && section.adresse && section.mapLink && (
              <a 
                href={section.mapLink} 
                target="_blank" 
                rel="noopener noreferrer"
                class="group block p-3 mb-4 bg-white rounded-xl border border-gray-100 hover:border-[#e4451e]/30 hover:shadow-md transition-all duration-300"
              >
                <p class="text-[#2D4356] flex items-center justify-center gap-2 mb-1 font-medium">
                  <Icon name="tabler:map-2" class="w-5 h-5 text-[#e4451e]" />
                  {section.lieu}
                </p>
                <p class="text-[#435B71] text-sm">{section.adresse}</p>
                <div class="transform translate-y-0 group-hover:translate-y-0 transition-transform duration-300">
                  <p class="text-[#e4451e] text-sm mt-2 flex items-center justify-center gap-1 font-medium">
                    <Icon name="tabler:navigation" class="w-4 h-4" />
                    Ouvrir dans Maps
                  </p>
                </div>
              </a>
            )}
            <ul class="space-y-2 text-gray-600">
              {section.infos.map((info) => (
                <li class="flex items-center justify-center gap-2">
                  <Icon name={info.icon} class="w-5 h-5" /> {info.text}
                </li>
              ))}
            </ul>
          </div>
        ))}
      </div>

      <!-- Contact et assistance -->
      <div class="mt-12 text-center">
        <p class="text-gray-600 mb-4">
          {accessibility.contact.text}
        </p>
        <Button 
          variant="primary" 
          href={`mailto:${accessibility.contact.email}`} 
          class="inline-flex items-center gap-2 w-full sm:w-auto text-sm sm:text-base px-4 py-3 justify-center break-all sm:break-normal"
        >
          <Icon name="tabler:mail" class="w-5 h-5 flex-shrink-0" />
          <span class="truncate">{accessibility.contact.email}</span>
        </Button>
      </div>
    </div>
  </section>

  <!-- Partenaires -->
  <section id="partenaires" class="py-16 bg-[color-mix(in_srgb,var(--ootb-orange)_5%,white)] relative overflow-hidden">
    <div class="max-w-6xl mx-auto px-4 sm:px-6">
      <div class="text-center mb-16">
        <SectionDivider variant="orange" class="mb-6">
          <Icon name="tabler:building" class="w-5 h-5" />
          Partenaires
        </SectionDivider>
        <h2 class="text-4xl md:text-5xl font-body font-bold mb-6 text-sky-900">
          {partenaireData.title}
        </h2>
        <p class="text-xl text-gray-600 max-w-3xl mx-auto mb-12">
          {partenaireData.description}
        </p>
      </div>

      <div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-8">
        {partenaireData.liste.map((partenaire) => (
          <div class="group bg-white/80 backdrop-blur-sm rounded-xl border border-gray-100 p-6 hover:shadow-lg transition-all duration-300 hover:-translate-y-1">
            <div class="aspect-[4/3] relative flex items-center justify-center p-4">
              <div class="absolute inset-0 bg-gradient-to-br from-[#e4451e]/5 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300 rounded-xl"></div>
              <Image
                src={partenaire.logo}
                alt="Logo partenaire"
                class="max-h-full w-auto object-contain relative z-10"
                widths={[150, 300]}
                sizes="(max-width: 768px) 150px, 300px"
                loading="lazy"
                cloudinaryOptions={{
                  quality: "auto:eco",
                  crop: "scale",
                  dpr: "auto"
                }}
              />
            </div>
          </div>
        ))}
      </div>
    </div>
  </section>
</Layout>

<style>
  .bg-pattern {
    background-color: #f8f6f4;
    background-image: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23e4451e' fill-opacity='0.05'%3E%3Cpath d='M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2V6h4V4H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
  }

  .festival-card {
    @apply bg-white/95 rounded-2xl shadow-md hover:shadow-lg transition-all duration-300 hover:-translate-y-1;
    border: 1px solid rgba(255, 255, 255, 0.4);
  }

  .theme-title {
    color: #34495e;
    @apply tracking-tight transition-colors duration-300;
  }

  .theme-title:hover {
    color: #6ab29e;
  }

  .section-title {
    @apply tracking-tight;
    background: linear-gradient(135deg, #34495e 0%, #435e78 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  .theme-description {
    color: #5d7186;
    @apply tracking-wide font-normal leading-relaxed;
  }
</style>

<script>
  // Garder uniquement la logique d'animation au scroll
  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('animate-fade-in-up');
      }
    });
  }, { threshold: 0.1 });

  document.querySelectorAll('section').forEach(section => {
    observer.observe(section);
  });

  // Type declaration for the custom event
  interface DayChangeEvent extends CustomEvent {
    detail: string;
  }

  document.addEventListener('dayChange', ((event: DayChangeEvent) => {
    const selectedDay = event.detail;
    const items = document.querySelectorAll('[data-day]');
    
    items.forEach(item => {
      if (item.getAttribute('data-day') === selectedDay) {
        item.classList.remove('hidden');
      } else {
        item.classList.add('hidden');
      }
    });
  }) as EventListener);
</script> 